<template>
      <view class="item-container">
        <view class="song-item" data-songid="{{item.song_id}}" bindtap="goToItemInfo">
          <view class="line"/>
          <image class="song-avatar" src="{{item.pic_small}}"/>
        
          <image wx-if="{{showmore}}" class="more" src="../images/more.png" catchtap="showSheet"  data-songid="{{item.song_id}}"/>

          <view class="song-text">
              <text class="song-title">{{item.title}}</text>
              <text class="song-album">专辑：{{item.album_title}}</text>
              <text class="song-author">演唱：{{item.author}}</text>
          </view>

        </view>
        <text class="divider"/>
      </view>

      <action-sheet hidden="{{actionSheetHidden}}" bindchange="actionSheetChange">
        <block wx:for="{{actionSheetItems}}" wx:key="index">
            <action-sheet-item class="item" bindtap="bindItemTap" data-name="{{item}}">{{item}}</action-sheet-item>
        </block>
        <action-sheet-cancel class="cancel">取消</action-sheet-cancel>
    </action-sheet>
</template>

<script>
  import wepy from 'wepy'
  import LocalMusicInfo from '../utils/save-music-info'
  import {SONG_LIST_MENU, STORE_KEY} from '../utils/const'

  export default class SongListItem extends wepy.component {
    components = {
    }
    props = {
      showmore: {
        type: Boolean,
        default: false,
        value: false,
      },
    }

    data = {
      actionSheetItems: ["删除"],
      actionSheetHidden: true,
      curSongid: undefined,
    }

    computed = {
    }

    methods = {
      goToItemInfo(e) {
        if (this.showmore.valueOf()) {
          var that = this;
          var songid = e.currentTarget.dataset['songid'];
          wepy.setStorageSync(STORE_KEY.UPDATE_PLAY_SONG_ID, songid);
          wx.navigateBack({
            delta: 1,
          });

        } else {
          wepy.navigateTo({
            url: '/pages/song_item_info?song_id=' + e.currentTarget.dataset['songid'],
          });  
        }
      },

      showSheet(e) {
        this.curSongid = e.currentTarget.dataset.songid;
        this.actionSheetHidden = !this.actionSheetHidden;
        this.$apply();
      },

      actionSheetChange(e) {
        this.actionSheetHidden = !this.actionSheetHidden;
        this.$apply();
      },

      bindItemTap(e) {
        if (e.currentTarget.dataset.comIndex == 6) {
          
        } else if (e.currentTarget.dataset.comIndex == 0) {
          var songid = this.curSongid;
          LocalMusicInfo.removeSongInfo(songid);
          this.$emit('delete-local-song-event', {}, {});
        }
        this.actionSheetHidden = !this.actionSheetHidden;
        this.$apply();
      },
    }

    onLoad () {
    }
  }
</script>

<style lang="less">
  .item-container {
    width: 100%;
  }
  .divider {
    width: 100%;
    height: 1rpx;
    background-color: #ccc;
    clear: both;
    display: block;
  }

  .song-item {
    width: 95%;
    height: 131rpx;
    margin: 0 auto;
  }

  .line {
    height: 110rpx;
    width: 5rpx;
    display: inline;
    background-color: #d81e06;
    margin: 10rpx 10rpx 10rpx 0;
    float: left;
  }

  .song-avatar {
    width: 120rpx;
    height: 120rpx;
    margin-top: 5rpx;
    margin-bottom: 5rpx;
    float: left;
    margin-right: 20rpx;
  }

  .song-text {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-content: center;
    height: 100%;
  }

  .song-title {
    font-size: 30rpx;
    margin-bottom: 2rpx;
    display: block;
    color: #d81e06;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .song-album {
    font-size: 22rpx;
    margin-top: 5rpx;
    color: #333;
    display: block;
  }

  .song-author {
    font-size: 22rpx;
    margin-top: 5rpx;
    color: #666;
    display: block;
  }

  .more {
    display: inline-block;
    position: relative;
    float: right;
    width: 50rpx;
    height: 50rpx;
    margin-top: 40rpx;
    margin-bottom: 40rpx;
    z-index: 5;
  }
</style>